{"ast":null,"code":"var _jsxFileName = \"/home/leoo/Documentos/t2software/web/src/components/formpost.tsx\";\nimport React from 'react';\nimport { useState } from 'react';\nimport cors from 'cors';\nimport api from '../services/api'; // export default class Form extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       nome: '',\n//       email: '',\n//     };\n//     this.onFormSubmit = this.handleSubmit.bind(this);\n//     this.handleNome = this.handleNome.bind(this);\n//     this.handleEmail = this.handleEmail.bind(this);\n//   }\n//   handleNome(values) {\n//     this.setState({ nome: values.target.value });\n//   }\n//   handleEmail(values) {\n//     this.setState({ email: values.target.value });\n//   }\n//   async handleSubmit(values) {\n//     const header = {\n//       headers: { \"Candidate\": \"lksato@uol.com.br\"},\n//     };\n//     const host =\n//       \"https://85k7bv04na.execute-api.us-east-1.amazonaws.com/dev/register\";\n//     const dados = { name: this.state.nome, email: this.state.email };\n//     if (this.state.nome.valueOf !== [''] && this.state.email.valueOf !== ['']) {\n//       axios\n//         .POST(host, dados, header)\n//         .then((resposta) => {\n//           console.log(resposta);\n//           alert(\"Cadastro realizado! Bem vindo ao neovision!\");\n//         })\n//         .catch((error) => {\n//           console.log(error);\n//         });\n//     } else {\n//       alert(\"Nome invalido ou e-mail invalido\");\n//     }\n//   }\n//render()\n\nconst express = require('express');\n\nconst [nome, setName] = useState('');\nconst [email, setEmail] = useState('');\nconst app = express();\napp.listen(3333);\napp.use(cors());\nexport default function Form() {\n  app.post('/sms', (req, res) => {\n    async function handleSubmit(event) {\n      event.preventDefault();\n      const data = new FormData();\n      data.append('nome', nome);\n      data.append('email', email);\n      const options = {\n        headers: {\n          Authorization: \"lksato@uol.com.br\"\n        }\n      };\n      await api.post('https://85k7bv04na.execute-api.us-east-1.amazonaws.com/dev/register', data, options);\n      alert('Cadastro realizado com sucesso!');\n    }\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      method: \"post\",\n      id: \"post\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"nome\",\n      value: nome,\n      onChange: e => setName(e.target.value),\n      placeholder: \"name\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"e-mail\",\n      type: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"btn\",\n      type: \"submit\",\n      style: {\n        backgroundColor: 'orange'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    })));\n  });\n}","map":{"version":3,"sources":["/home/leoo/Documentos/t2software/web/src/components/formpost.tsx"],"names":["React","useState","cors","api","express","require","nome","setName","email","setEmail","app","listen","use","Form","post","req","res","handleSubmit","event","preventDefault","data","FormData","append","options","headers","Authorization","alert","e","target","value","backgroundColor"],"mappings":";AAAY,OAAOA,KAAP,MAAqD,OAArD;AACZ,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,GAAP,MAAgB,iBAAhB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAMS,GAAG,GAAGN,OAAO,EAAnB;AAEAM,GAAG,CAACC,MAAJ,CAAW,IAAX;AAEAD,GAAG,CAACE,GAAJ,CAAQV,IAAI,EAAZ;AACA,eAAe,SAASW,IAAT,GAAgB;AAC/BH,EAAAA,GAAG,CAACI,IAAJ,CAAS,MAAT,EAAiB,CAACC,GAAD,EAAKC,GAAL,KAAY;AAQ5B,mBAAeC,YAAf,CAA4BC,KAA5B,EAA+C;AAC9CA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBhB,IAApB;AACAc,MAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBd,KAArB;AACA,YAAMe,OAAO,GAAG;AACdC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB;AADK,OAAhB;AAKA,YAAMtB,GAAG,CAACW,IAAJ,CAAS,qEAAT,EAAgFM,IAAhF,EAAsFG,OAAtF,CAAN;AACAG,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACA;;AACA,wBAEc;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,EAAE,EAAC,MAAvB;AAA8B,MAAA,QAAQ,EAAET,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAO,MAAA,EAAE,EAAC,MAAV;AAAkB,MAAA,KAAK,EAAEX,IAAzB;AAAgC,MAAA,QAAQ,EAAEqB,CAAC,IAAIpB,OAAO,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtD;AAAyE,MAAA,WAAW,EAAC,MAArF;AAA4F,MAAA,IAAI,EAAC,MAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,eAEH;AAAO,MAAA,EAAE,EAAC,OAAV;AAAmB,MAAA,KAAK,EAAErB,KAA1B;AAAiC,MAAA,QAAQ,EAAEmB,CAAC,IAAIlB,QAAQ,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxD;AAA0E,MAAA,WAAW,EAAC,QAAtF;AAA+F,MAAA,IAAI,EAAC,OAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,eAGH;AAAO,MAAA,EAAE,EAAC,KAAV;AAAgB,MAAA,IAAI,EAAC,QAArB;AAA8B,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHG,CADD,CAFd;AAUC,GAhCH;AAgCK","sourcesContent":["            import React,{ChangeEvent, FormEvent,Component} from 'react';\nimport { useState } from 'react';\nimport cors from 'cors';\nimport api from '../services/api'\n\n// export default class Form extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       nome: '',\n//       email: '',\n//     };\n//     this.onFormSubmit = this.handleSubmit.bind(this);\n//     this.handleNome = this.handleNome.bind(this);\n//     this.handleEmail = this.handleEmail.bind(this);\n//   }\n//   handleNome(values) {\n//     this.setState({ nome: values.target.value });\n//   }\n\n//   handleEmail(values) {\n//     this.setState({ email: values.target.value });\n//   }\n\n//   async handleSubmit(values) {\n//     const header = {\n//       headers: { \"Candidate\": \"lksato@uol.com.br\"},\n//     };\n//     const host =\n//       \"https://85k7bv04na.execute-api.us-east-1.amazonaws.com/dev/register\";\n\n//     const dados = { name: this.state.nome, email: this.state.email };\n\n//     if (this.state.nome.valueOf !== [''] && this.state.email.valueOf !== ['']) {\n//       axios\n//         .POST(host, dados, header)\n//         .then((resposta) => {\n//           console.log(resposta);\n//           alert(\"Cadastro realizado! Bem vindo ao neovision!\");\n//         })\n//         .catch((error) => {\n//           console.log(error);\n//         });\n//     } else {\n//       alert(\"Nome invalido ou e-mail invalido\");\n//     }\n//   }\n//render()\n\n\n\nconst express = require('express')\nconst [nome, setName] = useState('');\nconst [email, setEmail] = useState('');\n\nconst app = express()\n\napp.listen(3333)\n\napp.use(cors())\nexport default function Form() {\napp.post('/sms', (req,res) =>{\n\n\n\n\n  \n\n\n async function handleSubmit(event : FormEvent) {\n  event.preventDefault();\n\n  const data = new FormData();\n  data.append('nome', nome);\n  data.append('email', email);\n  const options = {\n    headers: { Authorization: \"lksato@uol.com.br\" },\n  };\n\n  \n  await api.post('https://85k7bv04na.execute-api.us-east-1.amazonaws.com/dev/register', data, options);\n  alert('Cadastro realizado com sucesso!');\n }\n  return(\n                 \n                <form method=\"post\" id=\"post\" onSubmit={handleSubmit} >\n                 <div className=\"input\">\n              <input id=\"nome\"  value={nome}  onChange={e => setName(e.target.value)}  placeholder=\"name\" type=\"text\"></input>\n              <input id=\"email\"  value={email} onChange={e => setEmail(e.target.value)} placeholder=\"e-mail\" type=\"email\"></input>\n              <input id=\"btn\" type=\"submit\" style={{ backgroundColor: 'orange' }}></input>\n                </div>\n              </form>\n              )\n  })}"]},"metadata":{},"sourceType":"module"}